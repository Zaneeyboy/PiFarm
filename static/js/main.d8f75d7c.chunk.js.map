{"version":3,"sources":["components/HomePage/About.jsx","components/HomePage/Features.jsx","config/firebase.js","components/HomePage/PricingCard.jsx","components/HomePage/PricingInfo.jsx","components/HomePage/Pricing.jsx","components/HomePage/CallToAction.jsx","components/HomePage/Testimonials.jsx","Home.js","Dashboard.js","components/layout/Header.jsx","components/layout/NotFoundPage.jsx","components/layout/AppRouter.jsx","components/layout/Footer.jsx","components/layout/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["About","id","Features","size","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","PricingCard","auth","firestore","props","useState","show","setShow","handleClose","fName","lName","email","package","contact","setContact","handleChange","event","target","name","value","prevValue","handleSubmit","first","last","eml","pkg","preventDefault","title","collection","add","firstName","lastName","ReactModal","setAppElement","Fragment","price","features","map","feature","key","onClick","type","shouldCloseOnOverlayClick","isOpen","contentLabel","className","onSubmit","onChange","placeholder","PricingInfo","Pricing","item","CallToAction","Testimonials","Home","Dashboard","Header","to","activeClassName","exact","NotFoundPage","AppRouter","basename","path","component","Footer","href","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d8f75d7c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst About = () => {\r\n    return ( \r\n        <section id = \"about\" >\r\n            <h2>About PiFarm</h2>\r\n            <p>\r\n            PiFarm is a web application built off of Reactjs and Firebase which allows it 's users to monitor and manage their hydroponic farm from their\r\n            phone.It is coupled to Raspberry Pi and Arduino Uno components which in\r\n            turn are coupled to various sensors which detect and send data to the PiFarm application in real time.PiFarm brings efficiency and management of your smart farm to a whole new level through it 's ability to connect\r\n            with your system even when on the go without the need\r\n            for costly equipment or hiring people to look after your farm\r\n            for you.With PiFarm, you maintain control of your system by monitoring the factors affecting your system as needed. \r\n            </p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { FaWifi } from \"react-icons/fa\";\r\nimport { GiPlantsAndAnimals } from \"react-icons/gi\";\r\nimport { GoAlert } from \"react-icons/go\";\r\n\r\nconst Features = () => {\r\n  return (\r\n    <div id=\"features\">\r\n      <div>\r\n        <div>\r\n          <FaWifi size=\"5rem\" />\r\n          <h3>Monitor your farm</h3>\r\n          <p>\r\n            See the status of your hydroponic farm in real time on your phone\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <GiPlantsAndAnimals size=\"5rem\" />\r\n          <h3>Feed your farm when it's hungry</h3>\r\n          <p>\r\n            Deploy nutrients during the day when your system struggles to cope\r\n            with weather conditions\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <GoAlert size=\"5rem\" />\r\n          <h3>Be alerted of anomalies</h3>\r\n          <p>See alerts in real time from anomalies detected in your system</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAgaL8R_i9vwihqxugD3y9LIS6lGoWpbZQ\",\r\n    authDomain: \"pifarm.firebaseapp.com\",\r\n    databaseURL: \"https://pifarm.firebaseio.com\",\r\n    projectId: \"pifarm\",\r\n    storageBucket: \"pifarm.appspot.com\",\r\n    messagingSenderId: \"911678453680\",\r\n    appId: \"1:911678453680:web:aaf24af49b310729840875\",\r\n    measurementId: \"G-J3F6LD6B38\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();","import React, {useState} from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport {IoMdClose} from \"react-icons/io\";\r\nimport firebase from \"../../config/firebase\";\r\n//using esversion:6\r\n\r\nconst PricingCard = props => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [contact, setContact] = useState({\r\n        fName: \"\",\r\n        lName: \"\",\r\n        email: \"\",\r\n        package: \"\"\r\n    });\r\n\r\n    ReactModal.setAppElement(\"*\");\r\n\r\n    function handleChange(event) {\r\n        const {name,value} = event.target;\r\n        setContact(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    function resetState() {\r\n        setContact(() => {\r\n            return {\r\n                fName: \"\",\r\n                lName: \"\",\r\n                email: \"\",\r\n                package: \"\"\r\n            }\r\n        });\r\n    }\r\n\r\n    function signUp(first, last, eml, pkg) {\r\n        firebase.firestore().collection('signups').add({\r\n            firstName: first,\r\n            lastName: last,\r\n            email: eml,\r\n            package: pkg\r\n        });\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        contact.package = props.title;\r\n        signUp(contact.fName, contact.lName, contact.email, contact.package);\r\n        resetState();\r\n        handleClose();\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <React.Fragment >\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <h3>{props.title}</h3>\r\n                        </div> \r\n                        <div>\r\n                            <h2>{props.price}</h2>\r\n                            {props.features.map(feature => {\r\n                                return <p key = {feature}>{feature}</p>\r\n                            })}\r\n                            <button onClick = { handleShow }\r\n                                type = \"button\" > Sign Up</button>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n                <ReactModal shouldCloseOnOverlayClick = { true} isOpen = {show} contentLabel = \"Signup Form\" >\r\n                    <div>\r\n                        <h2 className = \"modal-title\" > Signup form for {props.title} Package </h2>\r\n                        <button onClick = {handleClose}><IoMdClose/></button>\r\n                    </div>\r\n                    <div>\r\n                        <h1>Hello {contact.fName} {contact.lName} </h1> \r\n                        <p>{contact.email}</p>\r\n                        <form onSubmit = {handleSubmit} >\r\n                            <input onChange = {handleChange}        \r\n                                name = \"fName\"\r\n                                value = {contact.fName}\r\n                                placeholder = \"First Name\" />\r\n                            <input onChange = {handleChange}\r\n                                name = \"lName\"\r\n                                value = {contact.lName}\r\n                                placeholder = \"Last Name\" />\r\n                            <input onChange = {handleChange}\r\n                                name = \"email\"\r\n                                value = {contact.email}\r\n                                placeholder = \"Email\" />\r\n                            <button onClick = {handleSubmit}>Submit Form</button> \r\n                        </form> \r\n                    </div> \r\n                    <div >\r\n                        <button onClick = {handleClose}>Close</button> \r\n                    </div> \r\n                </ReactModal> \r\n            </React.Fragment> \r\n        </div>\r\n    );\r\n}\r\nexport default PricingCard;\r\n","const PricingInfo = [{\r\n        key: 1,\r\n        title: \"Home Farmer\",\r\n        price: \"$1500\",\r\n        features: [\r\n            \"Get alerts from your system\",\r\n            \"Feed your plants automatically at specified times twice a day\",\r\n            \"Check system status up to 3 times a day\",\r\n            \"PiFarm setup for a system containing up to 200 plants\"\r\n        ]\r\n    },\r\n    {\r\n        key: 2,\r\n        title: \"Big Twig\",\r\n        price: \"$2500\",\r\n        features: [\r\n            \"Get alerts from your system\",\r\n            \"Feed your plants an unlimited number of times during the day\",\r\n            \"Check system status an unlimited number of times a day\",\r\n            \"PiFarm setup for a system containing up to 2000 plants\"\r\n        ]\r\n    },\r\n    {\r\n        key: 3,\r\n        title: \"Commercial Farmer\",\r\n        price: \"$2000\",\r\n        features: [\r\n            \"Get alerts from your system\",\r\n            \"Feed your plants an unlimited number of times during the day\",\r\n            \"Check system status an unlimited number of times a day\",\r\n            \"PiFarm setup for a system containing up to 1000 plants\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default PricingInfo;\r\n","import React from \"react\";\r\nimport PricingCard from \"./PricingCard\";\r\n\r\nimport PricingInfo from \"./PricingInfo\";\r\n\r\nconst Pricing = () => {\r\n  return (\r\n    <section id=\"pricing\">\r\n      <h2>PiFarm Packages</h2>\r\n      <p>Simple and affordable plans to fit your system</p>\r\n      <div>\r\n        {PricingInfo.map(item=>{\r\n          return(\r\n            <PricingCard\r\n              key={item.key}\r\n              title={item.title}\r\n              price={item.price}\r\n              features={item.features}\r\n            />\r\n          )\r\n        })}\r\n        <p>flames</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","import React from \"react\";\r\nimport { MdContactMail } from \"react-icons/md\";\r\nimport { FiPhoneOutgoing } from \"react-icons/fi\";\r\n\r\nexport default function CallToAction() {\r\n  return (\r\n    <div>\r\n      <section id=\"calltoaction\">\r\n        <h3>Manage your farm from afar starting today!</h3>\r\n        <p>\r\n          Still not sure? Contact us for a free consultation on Pifarm packages\r\n          to suit your needs\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <MdContactMail size=\"1.5rem\" /> Email : bigtwigs@gmail.com\r\n          </li>\r\n          <li>\r\n            <FiPhoneOutgoing size=\"1.5rem\" /> Tel : 1-868-123-4567\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Testimonials() {\r\n    return (\r\n        <div>\r\n            Penis\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport About from './components/HomePage/About';\r\nimport Features from \"./components/HomePage/Features\";\r\nimport Pricing from \"./components/HomePage/Pricing\";\r\nimport CallToAction from \"./components/HomePage/CallToAction\";\r\nimport Testimonials from \"./components/HomePage/Testimonials\";\r\n\r\nexport default function Home() {\r\n    return ( \r\n        <div >\r\n            <About />\r\n            <Features />\r\n            <Testimonials />\r\n            <Pricing />\r\n            <CallToAction />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Dashboard=()=>{\r\n    return (\r\n        <div>\r\n        wood\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nexport default function Header() {\r\n    return (\r\n      <header>\r\n        <h1 className=\"nav-title\">PiFarm</h1>\r\n        <nav>\r\n          <NavLink to=\"/\" activeClassName=\"active-nav-link\" exact={true}>\r\n            Home\r\n          </NavLink>\r\n          <NavLink to=\"Dashboard\" activeClassName=\"active-nav-link\">\r\n            Dashboard\r\n          </NavLink>\r\n        </nav>\r\n      </header>\r\n    );\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n      <div>\r\n        <h2>404 - Page not found</h2>\r\n        <Link to=\"/\">Go home</Link>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"../../Home\";\r\nimport Dashboard from \"../../Dashboard\";\r\nimport Header from \"./Header\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\n\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n      <BrowserRouter basename=\"/\">\r\n        <Header/>\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" exact={true} component={Home}/>\r\n                <Route path=\"/Dashboard\" component={Dashboard}/>\r\n                <Route component={NotFoundPage}/>\r\n            </Switch>\r\n        </main>\r\n      </BrowserRouter>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {FaFacebookF,FaGithub,FaInstagram,FaTwitter} from \"react-icons/fa\";\r\nimport {MdEmail} from \"react-icons/md\";\r\nexport default function Footer() {\r\n\r\n    return(\r\n        <footer id=\"footer\">\r\n            <div>\r\n                <a href=\"https://www.facebook.com/\"><FaFacebookF/></a>\r\n                <a href=\"https://www.instagram.com/\"><FaInstagram/></a>\r\n                <a href=\"https://twitter.com/explore\"><FaTwitter/></a>\r\n                <a href=\"https://github.com/Zaneeyboy/PiFarm\"><FaGithub/></a>\r\n                <a href=\"https://gmail.com\"><MdEmail/></a>\r\n                <p>2020 Big Twig Farms</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\nimport AppRouter from \"./AppRouter\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function Layout(props) {\r\n    return ( \r\n        <div>\r\n            <AppRouter/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport Layout from \"./components/layout/Layout\";\n\nfunction App() {\n  return (<>\n    <Layout/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}