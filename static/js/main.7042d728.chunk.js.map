{"version":3,"sources":["components/HomePage/About.jsx","components/HomePage/Features.jsx","config/firebase.js","components/HomePage/PricingCard.jsx","components/HomePage/PricingInfo.jsx","components/HomePage/Pricing.jsx","components/HomePage/CallToAction.jsx","components/HomePage/TestimonialData.jsx","components/HomePage/Testimonials.jsx","Home.js","config/Auth.js","components/Dashboard/Ph.jsx","components/Dashboard/TurbiditySensor.jsx","components/Dashboard/SoilMoisture.jsx","components/Dashboard/SystemSetup.jsx","components/Dashboard/System.jsx","Dashboard.js","components/layout/Header.jsx","components/layout/NotFoundPage.jsx","components/layout/Login.jsx","components/layout/Logout.jsx","components/layout/Register.jsx","components/layout/PrivateRoute.jsx","components/layout/AppRouter.jsx","components/layout/Footer.jsx","components/layout/Layout.jsx","App.js","serviceWorker.js","index.js","images/Pifarm.png","images/phScale.png","images/Turbidity.png","images/Soil Moisture.png"],"names":["About","id","className","src","PiFarmLogo","alt","Features","size","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","PricingCard","props","useState","show","setShow","handleClose","fName","lName","email","package","contact","setContact","handleChange","event","target","name","value","prevValue","handleSubmit","first","last","eml","pkg","preventDefault","title","collection","add","firstName","lastName","Fragment","Card","border","md","Body","Header","Title","price","features","map","feature","Text","key","onClick","type","Modal","contentLabel","onHide","closeButton","Container","fluid","onSubmit","Row","Col","sm","onChange","placeholder","PricingInfo","Pricing","item","lg","CallToAction","style","fontSize","text","0","testimonial","occupation","1","2","3","4","Testimonials","testimonials","current","setCurrent","active","setActive","css","Object","keys","index","getAttribute","handleSetClick","data-testimonial","Home","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","Ph","ph","setpH","uid","useContext","phArray","doc","onSnapshot","snapshot","docChanges","forEach","change","push","data","length","suggestion","setSuggestion","suggestionArray","val","parseFloat","comparepHValues","paddingTop","paddingBottom","phScaleLogo","width","borderRadius","TurbiditySensor","ppm","setPpm","ppmArray","backgroundColor","TurbidityLogo","SoilMoisture","moisture","setMoisture","moistureArray","compareMoistureValues","SoilMoistureLogo","SystemSetup","system","setSystem","console","log","System","setName","setEmail","get","then","systemsArray","Dashboard","Navbar","collapseOnSelect","expand","bg","variant","fontWeight","color","to","Toggle","aria-controls","Collapse","Nav","activeClassName","exact","NavDropdown","paddingLeft","paddingRight","NotFoundPage","Login","password","details","setDetails","a","signInWithEmailAndPassword","alert","quotes","Logout","number","Math","floor","random","signOut","Register","confirmpassword","setData","createUserWithEmailAndPassword","cred","set","error","message","fname","PrivateRoute","RouteComponent","component","rest","render","routeProps","AppRouter","basename","path","LoginPage","LogoutPage","RegisterPage","Footer","href","Layout","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.7042d728.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PiFarmLogo from \"../../images/Pifarm.png\";\r\n\r\nconst About = () => {\r\n\r\n    \r\n    return (\r\n      <section id=\"about\" className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h1 className=\"project-title\">\r\n              PiFarm - Revolutionizing Agriculture\r\n            </h1>\r\n            <p className=\"lead\">\r\n              Automate your hydroponic farm with PiFarm, the first web\r\n              application built to connect with your hydroponic system in real\r\n              time\r\n            </p>\r\n            <p className=\"lead\">\r\n              PiFarm is a web application built on React Js, Firebase and\r\n              Bootstrap. It couples Arduino Uno and Raspberry Pi sensor\r\n              components to deliver real time information on the status of\r\n              hydroponic farms to its users.\r\n            </p>\r\n            <p className=\"lead\">\r\n              Don't be left behind with tradition, join the revolution today!\r\n            </p>\r\n            <p className=\"lead\">Powered By</p>\r\n            <p className=\"lead\"> ReactJs, Firebase, Arduino and Raspberry Pi</p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <img className=\"logo\" src={PiFarmLogo} alt=\"Pifarm Logo\" />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { FaWifi } from \"react-icons/fa\";\r\nimport { GiPlantsAndAnimals } from \"react-icons/gi\";\r\nimport { GoAlert } from \"react-icons/go\";\r\n\r\n\r\nconst Features = () => {\r\n  return (\r\n    <div id=\"features\" className=\"container-fluid colored-section\">\r\n      <div className=\"row\">\r\n        <div className=\"feature-box col-lg-4\">\r\n          <FaWifi className=\"icon\" size=\"5rem\" />\r\n          <h3 className=\"feature-title\">Monitor your farm</h3>\r\n          <p>\r\n            See the status of your hydroponic farm in real time on your phone\r\n          </p>\r\n        </div>\r\n\r\n        <div  className=\"feature-box col-lg-4\">\r\n          <GiPlantsAndAnimals className=\"icon\" size=\"5rem\" />\r\n          <h3 className=\"feature-title\">Feed your farm when it's hungry</h3>\r\n          <p>\r\n            Deploy nutrients during the day when your system struggles to cope\r\n            with weather conditions\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"feature-box col-lg-4\">\r\n          <GoAlert className=\"icon\" size=\"5rem\" />\r\n          <h3 className=\"feature-title\">Be alerted of anomalies</h3>\r\n          <p>See alerts in real time from anomalies detected in your system</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAgaL8R_i9vwihqxugD3y9LIS6lGoWpbZQ\",\r\n    authDomain: \"pifarm.firebaseapp.com\",\r\n    databaseURL: \"https://pifarm.firebaseio.com\",\r\n    projectId: \"pifarm\",\r\n    storageBucket: \"pifarm.appspot.com\",\r\n    messagingSenderId: \"911678453680\",\r\n    appId: \"1:911678453680:web:aaf24af49b310729840875\",\r\n    measurementId: \"G-J3F6LD6B38\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();","import React, {useState} from \"react\";\r\n//import {IoMdClose} from \"react-icons/io\";\r\nimport firebase from \"../../config/firebase\";\r\nimport {Card,Modal,Container,Row,Col} from \"react-bootstrap\";\r\n//using esversion:6\r\n\r\nconst PricingCard = props => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [contact, setContact] = useState({\r\n        fName: \"\",\r\n        lName: \"\",\r\n        email: \"\",\r\n        package: \"\"\r\n    });\r\n\r\n\r\n    function handleChange(event) {\r\n        const {name,value} = event.target;\r\n        setContact(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            };\r\n        });\r\n    }\r\n\r\n    function resetState() {\r\n        setContact(() => {\r\n            return {\r\n                fName: \"\",\r\n                lName: \"\",\r\n                email: \"\",\r\n                package: \"\"\r\n            };\r\n        });\r\n    }\r\n\r\n    function signUp(first, last, eml, pkg) {\r\n        firebase.firestore().collection('signups').add({\r\n            firstName: first,\r\n            lastName: last,\r\n            email: eml,\r\n            package: pkg\r\n        });\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        contact.package = props.title;\r\n        signUp(contact.fName, contact.lName, contact.email, contact.package);\r\n        resetState();\r\n        handleClose();\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <React.Fragment>\r\n                <Card border=\"dark\" md={4}>\r\n                    <Card.Body>\r\n                        <Card.Header><h3 className=\"\">{props.title}</h3></Card.Header>\r\n                        <Card.Title><h2 className=\"price-text\">{props.price}</h2></Card.Title>\r\n                        \r\n                            {props.features.map(feature => {\r\n                                return (\r\n                                    <Card.Text key={feature} className = \"card-text\" >\r\n                                        {feature}\r\n                                    </Card.Text>\r\n                                );\r\n                            })}\r\n                        \r\n                        <button className=\"btn btn-primary\" onClick={handleShow}\r\n                                type=\"button\">Sign Up</button>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal contentLabel=\"Signup Form\" show={show} size=\"lg\" onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title> Signup form for the {props.title} Package </Modal.Title>\r\n                        {/* <button onClick = {handleClose}><IoMdClose/></button> */}\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container fluid>\r\n                            <h1>Hello {contact.fName} {contact.lName} </h1> \r\n                            <p>{contact.email}</p>\r\n                            <form onSubmit = {handleSubmit} >\r\n                                <Row>\r\n                                    <Col sm={12}>\r\n                                    <input className=\"modalInput\" onChange = {handleChange}        \r\n                                    name = \"fName\"\r\n                                    value = {contact.fName}\r\n                                    placeholder = \"First Name\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col  sm={12}>\r\n                                    <input className=\"modalInput\" onChange = {handleChange}\r\n                                    name = \"lName\"\r\n                                    value = {contact.lName}\r\n                                    placeholder = \"Last Name\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col  sm={12}>\r\n                                    <input className=\"modalInput\" onChange = {handleChange}\r\n                                    name = \"email\"\r\n                                    value = {contact.email}\r\n                                    placeholder = \"Email\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                        <p className=\"modal-submit-text\">Submit this form and we'll be in contact soon with your package</p>\r\n                                        <button className=\"btn btn-primary modal-button\" onClick = {handleSubmit}>Submit Form</button> \r\n\r\n                                \r\n                            </form> \r\n\r\n                        </Container>\r\n                        \r\n                    </Modal.Body> \r\n                    \r\n                </Modal> \r\n            </React.Fragment> \r\n        </div>\r\n    );\r\n}\r\nexport default PricingCard;\r\n\r\n  ","const PricingInfo = [{\r\n        key: 1,\r\n        title: \"Home Farmer\",\r\n        price: \"$1500\",\r\n        features: [\r\n            \"Get alerts from your system\",\r\n            \"Feed your plants automatically at specified times twice a day\",\r\n            \"Check system status up to 3 times a day\",\r\n            \"PiFarm setup for a system containing up to 200 plants\"\r\n        ]\r\n    },\r\n    {\r\n        key: 2,\r\n        title: \"Big Twig\",\r\n        price: \"$2500\",\r\n        features: [\r\n            \"Get alerts from your system\",\r\n            \"Feed your plants an unlimited number of times during the day\",\r\n            \"Check system status an unlimited number of times a day\",\r\n            \"PiFarm setup for a system containing up to 2000 plants\"\r\n        ]\r\n    },\r\n    {\r\n        key: 3,\r\n        title: \"Commercial Farmer\",\r\n        price: \"$2000\",\r\n        features: [\r\n            \"Get alerts from your system\",\r\n            \"Feed your plants an unlimited number of times during the day\",\r\n            \"Check system status an unlimited number of times a day\",\r\n            \"PiFarm setup for a system containing up to 1000 plants\"\r\n        ]\r\n    }\r\n];\r\n\r\nexport default PricingInfo;\r\n","import React from \"react\";\r\nimport PricingCard from \"./PricingCard\";\r\nimport {Container,Row,Col} from \"react-bootstrap\";\r\nimport PricingInfo from \"./PricingInfo\";\r\n\r\nconst Pricing = () => {\r\n  return (\r\n    <section id=\"pricing\" >\r\n    <Container className=\"fluid-container\">\r\n    <h2 className=\"section-heading\">PiFarm Packages</h2>\r\n      <p>Simple and affordable plans to fit your system</p>\r\n      <Row>\r\n        {PricingInfo.map(item=>{\r\n          return(\r\n            <Col key={item.key} lg={4}>\r\n              <PricingCard className=\"pricing-column\"\r\n              key={item.key}\r\n              title={item.title}\r\n              price={item.price}\r\n              features={item.features}\r\n            />\r\n            </Col>\r\n            \r\n          )\r\n        })}\r\n      </Row>\r\n        \r\n  \r\n    </Container>\r\n      \r\n        \r\n      \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","import React from \"react\";\r\nimport { MdContactMail } from \"react-icons/md\";\r\nimport { FiPhoneOutgoing } from \"react-icons/fi\";\r\n\r\n\r\nexport default function CallToAction() {\r\n  return (\r\n    <div>\r\n      <section id=\"calltoaction\" className=\"container-fluid colored-section\">\r\n        <h3 className=\"section-heading\">\r\n          Contact us for a free consultation on Pifarm packages today!\r\n        </h3>\r\n        <ul>\r\n          <li style={{fontSize:\"1.2rem\"}} className=\"btn btn-outline-dark contact-button\">\r\n            <MdContactMail size=\"1.5rem\" /> Email : bigtwigs@gmail.com\r\n          </li>\r\n          <li style={{fontSize: \"1.2rem\"}}\r\n          className = \"btn btn-primary contact-button\" >\r\n            <FiPhoneOutgoing size=\"1.5rem\" /> Tel : 1-868-123-4567\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","const text={\r\n    0:{\r\n        name:\"Zane Mohammed\",\r\n        testimonial: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tincidunt eget nullam non nisi est sit.\",\r\n        occupation:\"Home Gardener\"\r\n    },\r\n    1:{\r\n        name:\"Pablo Picasso\",\r\n        testimonial: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tincidunt eget nullam non nisi est sit.\",\r\n        occupation:\"Commercial Farmer\"\r\n    },\r\n    2:{\r\n        name:\"Albert Einstein\",\r\n        testimonial:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tincidunt eget nullam non nisi est sit.\",\r\n        occupation:\"Commercial Farmer\"\r\n    },\r\n    3:{\r\n        name:\"Nicola Tesla\",\r\n        testimonial:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tincidunt eget nullam non nisi est sit.\",\r\n        occupation:\"Home Gardener\"\r\n    },\r\n    4:{\r\n        name:\"Sigmund Freud\",\r\n        testimonial:\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tincidunt eget nullam non nisi est sit.\",\r\n        occupation:\"Commercial Farmer\"\r\n    }\r\n};\r\n\r\nexport default text;","import React,{useState} from \"react\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport testimonials from \"./TestimonialData\";\r\nimport {css} from \"emotion\";\r\n\r\nconst Testimonials=()=>{\r\n\r\n  const [current,setCurrent]=useState(testimonials[0]);\r\n  \r\n  const [active,setActive]=useState(0);\r\n\r\n  const handleSetClick=(event)=>{\r\n    setCurrent(testimonials[event.target.getAttribute(\"data-testimonial\")]);\r\n    setActive(event.target.getAttribute(\"data-testimonial\"));\r\n  }\r\n\r\n  return (\r\n    <section className=\"dark-section\">\r\n      <Container fluid>\r\n        <h2 className=\"section-heading colored-text\">Testimonials</h2>\r\n\r\n        <div\r\n          className={css`\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            margin: 40px auto;\r\n            max-width: 600px;\r\n\r\n            p {\r\n              text-align: center;\r\n              margin-bottom: 20px;\r\n              color: white;\r\n              font-size:1.5rem;\r\n            }\r\n\r\n            em {\r\n              text-align: center;\r\n              margin-bottom: 20px;\r\n              color: white;\r\n              font-size:1.2rem;\r\n            }\r\n          `}\r\n        >\r\n          <p className=\"white-text\">{current.testimonial}</p>\r\n          <em className=\"white-text\">\r\n            {current.name}, {current.occupation}\r\n          </em>\r\n\r\n          <div\r\n            className={css`\r\n              display: flex;\r\n\r\n              span {\r\n                height: 20px;\r\n                width: 20px;\r\n                margin: 0 3px;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                cursor: pointer;\r\n              }\r\n\r\n              span::before {\r\n                content: \"\";\r\n                height: 8px;\r\n                width: 8px;\r\n                background-color: #8f8f8f;\r\n                border-radius: 50%;\r\n                transition:background-color 0.3s ease;\r\n              }\r\n\r\n              span:hover::before{\r\n                background-color:#ffd31d;\r\n              }\r\n\r\n              span[data-testimonial=\"${active}\"]::before{\r\n                background-color:#ffd31d;\r\n              }\r\n            `}\r\n          >\r\n            {Object.keys(testimonials).map((index) => (\r\n              <span\r\n                onClick={(event) => handleSetClick(event)}\r\n                data-testimonial={index}\r\n                key={index}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Testimonials;","import React from 'react';\r\nimport About from './components/HomePage/About';\r\nimport Features from \"./components/HomePage/Features\";\r\nimport Pricing from \"./components/HomePage/Pricing\";\r\nimport CallToAction from \"./components/HomePage/CallToAction\";\r\nimport Testimonials from \"./components/HomePage/Testimonials\";\r\n\r\nexport default function Home() {\r\n    return ( \r\n        <div >\r\n            <About />\r\n            <Features />\r\n            <Testimonials />\r\n            <Pricing />\r\n            <CallToAction />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport app from \"./firebase.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n    });\r\n  }, []);\r\n\r\n  if(pending){\r\n    return (<>Loading...</>);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","import React,{useState,useEffect,useContext} from 'react';\r\n//import phLogo from \"../../images/ph.png\";\r\nimport phScaleLogo from \"../../images/phScale.png\";\r\nimport {Container,Row,Col,Modal} from \"react-bootstrap\";\r\nimport {firestore} from \"../../config/firebase\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\n\r\nexport default function Ph() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [ph,setpH]=useState(\"\");\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n    const uid=currentUser.uid;\r\n\r\n    const phArray=[];\r\n    useEffect(()=>{\r\n        firestore.collection(\"users\").doc(uid).collection(\"systems\").doc(\"flames\").collection(\"ph\").onSnapshot(snapshot=>{\r\n            //populate ph value array\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change=>{\r\n                if (change.type == \"added\") {//gets change type\r\n                    phArray.push(change.doc.data().value);\r\n                }\r\n            });\r\n            setpH(phArray[phArray.length-1]);\r\n\r\n\r\n            //pull data in order of timestamp\r\n            //push data in array in that order\r\n            //get latest value and set ph to that value\r\n            //render content in modal according to the value set\r\n        });\r\n    },[]);\r\n\r\n    const [suggestion,setSuggestion]=useState(\"\");\r\n    const suggestionArray={\r\n        0:\"acidic\",\r\n        1:\"alkaline\",\r\n        2:\"neutral\",\r\n        3:\"The pH level is measured on a scale from 1 to 14, with the neutral point being 7. Everything above neutral is alkaline and everything below is acidic. In hydroponics, when growing several different types of herbs or vegetables in one container, you will probably do best in the range of 5.6 to 6.5, because it is within this range that nutrients are most available to plants. \"\r\n    };\r\n\r\n    const comparepHValues=()=>{\r\n        let val=parseFloat(ph);\r\n            if(val<6.0)\r\n                setSuggestion(suggestionArray[0]);\r\n            else if(val>5.9 && val<7.0)\r\n                setSuggestion(suggestionArray[2])\r\n            else if(val>=7.0)\r\n                setSuggestion(suggestionArray[1]);\r\n            else setSuggestion(suggestionArray[3]);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        comparepHValues();\r\n    },[ph]);\r\n    \r\n    return (\r\n        <div className=\"colored-section\"\r\n        style = {\r\n            {\r\n                paddingTop: '3.5%',\r\n                paddingBottom:\"3.5%\"\r\n            }\r\n        } >\r\n        <Container>\r\n        <h1 className=\"section-heading \">PH Level</h1>\r\n            <Row>\r\n            <Col md={4} >\r\n                <img src={phScaleLogo} style={{width:'100%',borderRadius: '50%',paddingTop:\"2%\" }} alt=\"logo\" />\r\n            </Col>\r\n            <Col md={8} >\r\n                <p>The pH level is measured on a scale from 1 to 14, with the neutral point being 7. Everything above neutral is alkaline and everything below is acidic. In hydroponics,\r\n                    when growing several different types of herbs or vegetables in one container, you will probably do best in the range of 5.6 to 6.5, because it is within this range that nutrients\r\n                    are most available to plants.</p>\r\n                <p>For instance, at 7.0, which is outside the most suitable range for vegetables, plants are still capable of taking up such elements as nitrogen, phosphorous and potassium.\r\n                   At this level though, the trace elements are becoming lost to the plants; the amounts of iron, maganese, boron, copper, zinc and molybdenum are generally cut in half.\r\n                   So if your pH is above 7, be on the lookout for trace element problems rather than those caused by macronutrients nitrogen, phosphorous and potassium.</p>\r\n                <button className=\"btn btn-outline-dark\" onClick={handleShow} type=\"button\">More on pH values</button>\r\n                <h3 className=\"\" style={{paddingTop:\"4%\",paddingBottom:\"2%\"}}>Current PH Reading: {ph}</h3>\r\n                <p>{suggestion}</p>\r\n                <button className=\"btn btn-dark\">Check Ph level</button>\r\n\r\n                \r\n                \r\n            </Col> \r\n        </Row>\r\n        </Container>\r\n            \r\n            <Modal show={show} size=\"lg\" onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>pH Breakdown</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container fluid>\r\n                            <h1>What you need to know about pH in hydroponics</h1>\r\n                            <p>\r\n                                 The term \"pH\" stands for \"potential hydrogen\" because hydrogen ions (H+) and hydroxide ions (OH-) are what cause a solution to be basic or acidic. \r\n                                 pH tests measure the concentration of these two substancs on a scale from 1 to 14 indicating how acidic a solution is or how basic it is accordingly.\r\n                            </p>\r\n                            <p>\r\n                                It is important to understand how basic or acidic your solution is because it tells you about nutrient availability, the hardness of your source water, and it can help you identify deficiencies. \r\n                                For the most part, nutrients are most available between a pH range of 5.5 to 6.5. Beyong this range, trace elements become lost to your plants even if they are present in your nutrient solution.\r\n                            </p>\r\n                            <p>\r\n                                Take iron for example. It comes in two forms - ferric and ferrous. Ferric has a charge of +3 and is unavailable to plants. Ferrous iron, on the other hand, has a charge of +2 and is available to plants. Iron fluctuates between these two forms in your system. As it is, ferrous iron can quickly become ferrir iron in a system with a high pH because of the way it reacts with hydrogen ions. Therefore, in higher pH symptoms, plants can more quickly develop iron deficiencies.\r\n                            </p>\r\n                        </Container>\r\n                        \r\n                    </Modal.Body> \r\n                    \r\n                </Modal> \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React,{useState,useEffect,useContext} from 'react'\r\nimport {Container,Row,Col,Modal} from \"react-bootstrap\";\r\nimport TurbidityLogo from \"../../images/Turbidity.png\";\r\nimport {firestore} from \"../../config/firebase\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\n\r\n\r\nexport default function TurbiditySensor() {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [ppm,setPpm]=useState(\"\");\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n    const uid=currentUser.uid;\r\n\r\n    const ppmArray=[];\r\n    useEffect(()=>{\r\n        firestore.collection(\"users\").doc(uid).collection(\"systems\").doc(\"flames\").collection(\"ppm\").onSnapshot(snapshot=>{\r\n            //populate ph value array\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change=>{\r\n                if (change.type == \"added\") {//gets change type\r\n                    ppmArray.push(change.doc.data().value);\r\n                }\r\n            });\r\n            setPpm(ppmArray[ppmArray.length-1]);\r\n\r\n\r\n            //pull data in order of timestamp\r\n            //push data in array in that order\r\n            //get latest value and set ph to that value\r\n            //render content in modal according to the value set\r\n        });\r\n    },[]);\r\n\r\n    const [suggestion,setSuggestion]=useState(\"\");\r\n    const suggestionArray={\r\n        0:\"too concentrated\",\r\n        1:\"too diluted\",\r\n        2:\"neutral\",\r\n        3: \"Turbidity is an optical determination of water clarity. It is determined by the amount  of light particles in the water column.The more particles that are present, the more light is refracted in the water column.\"\r\n    };\r\n\r\n    const comparepHValues=()=>{\r\n        let val=parseFloat(ppm);\r\n            if(val>=1600)\r\n                setSuggestion(suggestionArray[0]);\r\n            else if(val>=800 && val<1600)\r\n                setSuggestion(suggestionArray[2])\r\n            else if(val<800)\r\n                setSuggestion(suggestionArray[1]);\r\n            else setSuggestion(suggestionArray[3]);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        comparepHValues();\r\n    },[ppm]);\r\n\r\n    return (\r\n        <div className=\"dark-section\" style={{paddingTop:'3.5%',paddingBottom:'3.5%'}}>\r\n        <Container>\r\n        <h1 className=\"section-heading colored-text\">PPM Level</h1> \r\n            <Row>\r\n                <Col md={8}> \r\n                    <p className=\"white-text\">Ppm or parts per million \r\n                        is used as a measurement of strength of the nutrient solution in a hydroponic reservoir,\r\n                        indicating how many milligrams of nutrients are present in every 1 litre of water. The \r\n                        amount of nutrient needed depends on the growth stage and the type of plant grown in the hydroponic system.\r\n                        This is important since a low level of ppm will result in your plants becoming stunted \r\n                        in growth since not enough nutrients are present, for instance.</p>\r\n                    <button className = \"btn btn-warning\"\r\n                    style = {\r\n                        {\r\n                            backgroundColor: '#ffd31d'\r\n                        }\r\n                    }\r\n                    onClick = {\r\n                        handleShow\r\n                    } type=\"button\">More on PPM</button>\r\n                      \r\n                    <h3 className=\"colored-text\" style={{paddingTop:\"4%\",paddingBottom:\"2%\"}}>Current PPM Reading: {ppm} ppm</h3>\r\n                       \r\n                    <p className = \"white-text\" >\r\n                        {suggestion}\r\n                    </p>\r\n\r\n                    <button className=\"btn btn-warning\" style={{backgroundColor:'#ffd31d'}}>Check PPM Level</button>\r\n\r\n                    \r\n                                \r\n                    \r\n                </Col>\r\n                <Col md={4} >\r\n                    <img style={{width:'100%',borderRadius: '50%',paddingTop:\"2%\" }} src={TurbidityLogo} alt=\"Turbidity Logo\"/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n            \r\n            <Modal contentLabel=\"PPM Reading Breakdown Modal\" show={show} size=\"lg\" onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>PPM Breakdown</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container fluid>\r\n                        <h1>PPM in hydroponics</h1>\r\n                        <p>In hydroponics, fast growth and high yields are made possible by the use of concentrated minerals and macronutrients. \r\n                        But this success is often decided by the finest of margins. \r\n                        As a grower, you have to find the Goldilocks zone of nutrient strength to help your plants grow properly. \r\n                        If you add too many nutrients, your plants can be affected by a severe case of a nutrient burn. \r\n                        Too little may have them stunted and flowering poorly. The lesson to take away here is to keep a strict eye on your nutrient solution.</p>\r\n                        <p>PPM here as a measure of water quality is important in hydroponics due to these facts. \r\n                        Different plants require different levels of PPM  to ensure optimized growth. \r\n                        As an example, lettuce requires a PPM level of 560-840ppm to grow optimally while celery requires a range of 1260-1400.</p>\r\n                        <p>Hydroponic farmers growing a variety of crops need to be mindful of this and find the right balance of nutrient concentration if several crops are\r\n                         being deployed nutrients from the same nutrient mix.</p>\r\n                         <p>Doing research on each type of plant you grow can help you decide what can be grown in the current cycle if you aim to grow several types of crops together. \r\n                         However, to ensure fast growth and maximum yield in a shorter time, measure frequently and adjust accordingly.</p>\r\n                        </Container>\r\n                        \r\n                    </Modal.Body> \r\n                    \r\n                </Modal> \r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport {Container,Row,Col,Modal} from \"react-bootstrap\";\r\nimport SoilMoistureLogo from \"../../images/Soil Moisture.png\";\r\nimport {firestore} from \"../../config/firebase\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\n\r\nexport default function SoilMoisture() {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [moisture,setMoisture]=useState(\"\");\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n    const uid=currentUser.uid;\r\n\r\n    const moistureArray=[];\r\n    useEffect(()=>{\r\n        firestore.collection(\"users\").doc(uid).collection(\"systems\").doc(\"flames\").collection(\"moisture\").onSnapshot(snapshot=>{\r\n            //populate ph value array\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change=>{\r\n                if (change.type == \"added\") {//gets change type\r\n                    moistureArray.push(change.doc.data().value);\r\n                }\r\n            });\r\n            setMoisture(moistureArray[moistureArray.length-1]);\r\n\r\n\r\n            //pull data in order of timestamp\r\n            //push data in array in that order\r\n            //get latest value and set ph to that value\r\n            //render content in modal according to the value set\r\n        });\r\n    },[]);\r\n\r\n    const [suggestion,setSuggestion]=useState(\"\");\r\n    const suggestionArray={\r\n        0:\"high moisture level\",\r\n        1:\"acceptable moisture level\",\r\n        2:\"dry af\",\r\n        3: \"The soil mositure level here refers to the moisture level of the growing medium in which your plants thrive in your hydroponic system.This measurement seeks to assist with deploying nutrients at the right time to your plants so that they remain neither underfed nor overfed.As a result, this measurements will give a good indication of when you should feed your plants during the course of the day.\"\r\n    };\r\n\r\n    const compareMoistureValues=()=>{\r\n        let val=parseFloat(moisture);\r\n            if(val>65)\r\n                setSuggestion(suggestionArray[0]);\r\n            else if(val>39 && val<=65)\r\n                setSuggestion(suggestionArray[1])\r\n            else if(val<=39)\r\n                setSuggestion(suggestionArray[2]);\r\n            else setSuggestion(suggestionArray[3]);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        compareMoistureValues();\r\n    },[moisture]);\r\n\r\n    return (\r\n        <div className=\"colored-section\" style={{paddingTop:\"3.5%\", paddingBottom:\"3.5%\"}}>\r\n            <Container>\r\n                <h1 className=\"section-heading\">Soil Moisture Level</h1>\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <img style={{borderRadius:\"50%\",width:\"100%\",paddingTop:\"2%\"}} src={SoilMoistureLogo} alt=\"Soil Moisture Logo\"></img>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <p>\r\n                                The soil mositure level here refers to the moisture level of the growing medium in which your\r\n                                plants thrive in your hydroponic system. This measurement seeks to assist with deploying nutrients at\r\n                                the right time to your plants so that they remain neither underfed nor overfed. As a result, this \r\n                                measurement will give a good indication of when you should feed your plants during the course of the day.\r\n                            </p>\r\n                        <button className=\"btn btn-outline-dark\" onClick={handleShow} type=\"button\">More on Soil Moisture</button>\r\n                        <h3 className=\"\" style={{paddingTop:\"4%\",paddingBottom:\"2%\"}}>Current Soil Moisture Reading: {moisture}% saturated</h3>\r\n                        \r\n                        <p>{suggestion}</p>\r\n                        <button className=\"btn btn-dark\">Check Soil Moisture Level</button>\r\n\r\n                        \r\n                        {/* <Pump moisturelevel={soilMoisture}/> */}\r\n                    </Col>\r\n                </Row>\r\n            </Container>   \r\n\r\n            <Modal contentLabel=\"Soil Moisture Reading Breakdown Modal\" show={show} size=\"lg\" onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Soil Moisture</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container fluid>\r\n                            <h1>Soil Moisture in Hydroponics</h1>\r\n                            <p>In hydroponics, soil moisture is only a concern with certain types of systems. Our major concern here though is the soil moisture level of a drip to waste system.\r\n                            So why is soil moisture important? Soil moisture measures the degree of saturation of your growing media in your hydroponic system. This is important because a media that is\r\n                            overly saturated can cause root rot in your plant roots and if the media is too dry, the plant can burn from heat or become stunted.</p>\r\n                            <p>Soil moisture is becoming more of a concern especially in the hotter climates primarily because of climate change and by extension, global warming. Increasingly, \r\n                            it becomes an issue for the hydroponic farmer to leave their system during the day if they do not own a shade house that covers the system because of the heat, especially during the dry season.</p>\r\n                            <p>Maintaining your system with an adequate level of moisture in your system can mean the difference between losing your cycle of plants or seeing them live till yield. However, it is important that you not overly deploy and dampen the growing media with nutrients or water specifically because it may end up doing more harm than good. In addition to root rot, your plant can also suffer from nutrient burn if the growing media is too damp. Therefore, you should deploy nutrients as needed but not in excess. </p>\r\n                        </Container>\r\n                    </Modal.Body> \r\n            </Modal>    \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {css} from \"emotion\";\r\n\r\nexport default function SystemSetup() {\r\n\r\n\r\n    const [system,setSystem]=useState({\r\n        name:\"\",\r\n        type:\"\"\r\n    });\r\n\r\n    function handleSubmit(event){\r\n      event.preventDefault();\r\n      console.log(\"Form submitted; system set up\");\r\n  }\r\n\r\n  function handleChange(event){\r\n      const {name,value} = event.target;\r\n      setSystem(prevValue => {\r\n        return {\r\n          ...prevValue,\r\n          [name]: value\r\n        };\r\n      });\r\n      handleClose();\r\n  }\r\n\r\n    const [show,setShow]=useState(false);\r\n\r\n    function handleShow(){\r\n        setShow(true);\r\n    }\r\n\r\n    function handleClose(){\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <button onClick={handleShow} className=\"btn btn-outline-dark\">Setup System</button>\r\n        </div>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>System Setup</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <div >\r\n            <form onSubmit={ handleSubmit } className = {css `\r\n              padding-top:3.5%;\r\n              padding-bottom:3.5%;\r\n            `} >\r\n              <input className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n                    `}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"System Name\"\r\n                value={system.name}\r\n                onChange={handleChange}\r\n              />\r\n            \r\n\r\n              <button className={css`\r\n                appearance: none;\r\n                outline: 0;\r\n                background-color: #343A40;\r\n                border: 0;\r\n                padding: 10px 15px;\r\n                color: white;\r\n                border-radius: 3px;\r\n                width: 250px;\r\n                font-size: 18px;\r\n              `} type=\"submit\">Complete Setup</button>\r\n            </form>\r\n        </div>\r\n            \r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Ph from \"./Ph\";\r\nimport Turbidity from \"./TurbiditySensor\";\r\nimport SoilMoisture from \"./SoilMoisture\";\r\nimport SystemSetup from \"./SystemSetup\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\nimport firebase from \"../../config/firebase\";\r\n\r\nimport {Row, Col, Container} from \"react-bootstrap\";\r\n\r\nexport default function System() {\r\n\r\n    const [name,setName]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [system,setSystem]=useState({\r\n        name:\"\",\r\n        type:\"\"\r\n    });\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n    const uid=currentUser.uid;\r\n\r\n    useEffect(()=>{\r\n        firebase.firestore().collection(\"users\").doc(uid).get().then(doc=>{\r\n            setName(doc.data().name);\r\n            setEmail(doc.data().email);\r\n        });\r\n    },[]);\r\n\r\n    const systemsArray=[];\r\n    useEffect(() => {\r\n        firebase.firestore().collection(\"users\").doc(uid).collection(\"systems\").onSnapshot(snapshot=>{\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change=>{\r\n                if(change.type==\"added\"){\r\n                    systemsArray.push(change.doc.data());\r\n                }\r\n                //if(change.type==\"removed\"){\r\n                    //remove data from the array\r\n                //}\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <section style={{paddingTop:'3.5%'}}>\r\n            <Container >\r\n                <Row>\r\n                    <Col md={9}>\r\n                        <h2 className=\"section-heading\">Welcome back {name}</h2>\r\n                        <p>Email: {email}</p>\r\n                        <p>See the latest readings from your system below</p>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <SystemSetup/>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                <Ph/>\r\n                <Turbidity/>\r\n                <SoilMoisture/>\r\n        </section>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport System from \"./components/Dashboard/System\";\r\n\r\nconst Dashboard=()=>{\r\n    return (\r\n        <div>\r\n        <System/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport {NavLink,Link} from \"react-router-dom\";\r\nimport {Navbar,Nav,NavDropdown} from \"react-bootstrap\";\r\n\r\n\r\nexport default function Header() {\r\n\r\n  const brandStyle={\r\n    fontWeight:'bold',\r\n    color:'#ffd31d',\r\n  };\r\n\r\n\r\n    return (\r\n      <header>\r\n        <Navbar className = \" sticky-top navbar dark-section\"\r\n        collapseOnSelect expand = \"md\"\r\n        bg = \"dark\"\r\n        variant = \"dark\" >\r\n            <Link style={brandStyle} to=\"/PiFarm\" className=\"navbar-brand\"> PiFarm</Link>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n                <NavLink to=\"PiFarm\" className=\"nav-item nav-link\" activeClassName=\"active\" exact={true}>\r\n                  Home\r\n                </NavLink>\r\n                <NavLink to=\"Dashboard\" className=\"nav-item nav-link\" activeClassName=\"active\">\r\n                  Dashboard\r\n                </NavLink>\r\n\r\n\r\n            <NavDropdown title = \"Account\" style={{paddingTop:'0px',paddingBottom:'0px',paddingLeft:\"0px\",paddingRight:\"0px\"}}\r\n            id = \"collasible-nav-dropdown\"\r\n            className = \"nav-item nav-link\" >\r\n\r\n              <Link to=\"/Register\"  className=\"dropdown-item\" >Register</Link>\r\n              <div className=\"dropdown-divider\"></div>\r\n\r\n              <Link to=\"/Login\"  className=\"dropdown-item\" >Login</Link>\r\n              <div className=\"dropdown-divider\"></div>\r\n\r\n              <Link to=\"/Logout\" className=\"dropdown-item\">Logout</Link>\r\n\r\n            </NavDropdown>\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n\r\n     \r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n      <div className=\"container-fluid colored-section\">\r\n        <h1 className=\"section-heading\">404 - Page not found</h1>\r\n        <Link className=\"btn btn-dark\" to=\"/PiFarm\">Go home</Link>\r\n      </div>\r\n    );\r\n}\r\n","import React,{useState,useContext} from \"react\";\r\nimport app from \"../../config/firebase\";\r\nimport {css} from \"emotion\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\n\r\nconst Login = () => {\r\n    const [details,setDetails]=useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    });\r\n\r\n    function handleChange(event){\r\n        const {name,value} = event.target;\r\n        setDetails(prevValue => {\r\n        return {\r\n          ...prevValue,\r\n          [name]: value\r\n        };\r\n      });\r\n    }\r\n\r\n    // function handleSubmit(e){\r\n    //     e.preventDefault();\r\n    //     console.log(details.email,details.password);\r\n    //     auth.signInWithEmailAndPassword(details.email,details.password).then(response=>{\r\n    //         console.log(response);\r\n    //     });\r\n    // }\r\n    const handleSubmit=(\r\n      async event=>{\r\n        event.preventDefault();\r\n        try{\r\n          await app.auth().signInWithEmailAndPassword(details.email,details.password);\r\n        } catch(error){\r\n          alert(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n\r\n    if(currentUser){\r\n      return (<><Redirect to=\"/Dashboard\" /></>);\r\n    }\r\n    \r\n\r\n    return ( \r\n    <div className=\"colored-section\" style={{paddingTop: \"7%\", paddingBottom: \"7%\"}}>  \r\n      <h1 className=\"section-heading\" style={{paddingBottom:\"2%\"}}>Login Page</h1>\r\n      <div className=\"container\" >\r\n        <h4>Welcome back {details.email}!</h4>\r\n        <form onSubmit={handleSubmit} className={css`\r\n                    padding-top:3.5%;\r\n                    padding-bottom:3.5%;\r\n        `}>\r\n              <input  className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n                    `}\r\n              name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                value={details.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input  className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n\r\n                    `}\r\n              name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={details.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button type=\"submit\" className={css`\r\n                        appearance: none;\r\n                        outline: 0;\r\n                        background-color: white;\r\n                        border: 0;\r\n                        padding: 10px 15px;\r\n                        color: black;\r\n                        border-radius: 3px;\r\n                        width: 250px;\r\n                        font-size: 18px;\r\n                    `}>Login</button>\r\n            </form>\r\n            <div className={css`\r\n                    a{\r\n                        padding:1%;\r\n                        margin:20px;\r\n                    }\r\n                `}>\r\n                    <Link to=\"/PiFarm\" className=\"btn btn-dark\">Go to Home Page</Link>\r\n                    <Link to=\"/Register\" className=\"btn btn-dark\">Go to Register Page</Link>\r\n                </div>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React,{useContext} from \"react\";\r\nimport {auth} from \"../../config/firebase\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\nimport {css} from \"emotion\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst quotes={\r\n    0:\"Success isn't always about greatness. It's about consistency. Consistent hard work leads to success. Greatness will come\",\r\n    1:\"The glory of gardening: Hands in the dirt, Head in the sun, Heart with nature. To nurture a garden is to feed not just on the body, but on the soul.\",\r\n    2:\"There are no gardening mistakes, only experiments\",\r\n    3:\"You can't buy happiness but you can grow plants and that's pretty much the same thing\"\r\n};\r\n\r\nconst Logout=()=>{\r\n\r\n    function logoutUser(){\r\n        console.log(\"signed out\");\r\n        auth.signOut();\r\n    }\r\n\r\n    const number=Math.floor(Math.random()*4);\r\n\r\n    const {currentUser} = useContext(AuthContext);\r\n\r\n    if(!currentUser){\r\n      return (<><Redirect to=\"/PiFarm\" /></>);\r\n    }\r\n\r\n    return(\r\n        <div className=\"container-fluid colored-section\">\r\n            <h1 className=\"section-heading\">We hope to see you again soon!</h1>\r\n            <p> </p>\r\n            <button className={css`\r\n                appearance: none;\r\n                outline: 0;\r\n                background-color:#343A40;;\r\n                border:0;\r\n                padding:10px 15px;\r\n                color: #ffdc34;\r\n                border-radius: 3 px;\r\n                width:250px;\r\n                font-size:18px;\r\n            `} onClick={logoutUser}>Logout</button>\r\n\r\n\r\n            <div\r\n                className={css`\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                margin: 40px auto;\r\n                max-width: 600px;\r\n\r\n                p {\r\n                text-align: center;\r\n                margin-bottom: 20px;\r\n                color: black;\r\n                font-size:1.5rem;\r\n                }\r\n          `}\r\n        >\r\n            <p>\"{quotes[number]}\"</p>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Logout;","import React,{useState,useContext} from 'react';\r\nimport {Link,Redirect} from \"react-router-dom\";\r\nimport {css} from \"emotion\";\r\nimport app from \"../../config/firebase\";\r\nimport {AuthContext} from \"../../config/Auth\";\r\n\r\nconst Register = () => {\r\n    const[data,setData]=useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmpassword:\"\"\r\n    });\r\n\r\n    function handleChange(event){\r\n      const {name,value} = event.target;\r\n      setData(prevValue => {\r\n        return {\r\n          ...prevValue,\r\n          [name]: value\r\n        };\r\n      });\r\n  }\r\n\r\n  const handleSubmit=(async event=>{\r\n    event.preventDefault();\r\n    try{\r\n        app.auth().createUserWithEmailAndPassword(data.email,data.password).then(cred=>{ //creating account\r\n            //creating a section of the database for the user\r\n            return app.firestore().collection('users').doc(cred.user.uid).set({\r\n                name:data.name,\r\n                email:data.email\r\n            });\r\n        });\r\n    } catch(error){\r\n        console.log(error.message);\r\n    }\r\n  });\r\n\r\n  const {currentUser} = useContext(AuthContext);\r\n\r\n    if(currentUser){\r\n      return (<><Redirect to=\"/Dashboard\" /></>);\r\n    }\r\n    \r\n\r\n//   {\r\n//       event.preventDefault();\r\n//       console.log(\"button submitted\");\r\n    //   if(!log){ const result = comparePasswords(accountInfo.password,checkPassword);\r\n    //     if(result!==0){\r\n    //         alert(\"Your passwords do not match\");\r\n    //     }\r\n    //     else{\r\n    //         //create account for new user\r\n    //         createUser(accountInfo.email,accountInfo.password);\r\n    //         resetState();     \r\n    //     }\r\n    // }\r\n    //   else{\r\n    //       //perform authentication and log user in\r\n    //         loggedIn();\r\n    //   }\r\n      \r\n  //}\r\n    return (\r\n        <div className=\"colored-section\" style={{paddingTop:\"7%\",paddingBottom:\"7%\"}}>\r\n            <h1 className=\"section-heading\" style={{paddingBottom:\"2%\"}}>Signup Page</h1>\r\n            <div className=\"container\">\r\n                <h5>Hello {data.name}</h5>\r\n                <p>{data.email}</p>\r\n                <form onSubmit={handleSubmit} className={css`\r\n                    padding-top:3.5%;\r\n                    padding-bottom:3.5%;\r\n\r\n                `}>\r\n                    <input className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n                    `}\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        value={data.fname}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n                    `}\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        value={data.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n                    `}\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={data.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <input className={css`\r\n                        border: 1px solid black;\r\n                        background-color: rgba(252, 252, 252, 0.2);\r\n                        width: 250px;\r\n                        border-radius: 3px;\r\n                        padding: 10px 15px;\r\n                        margin: 0 auto 10px auto;\r\n                        display: block;\r\n                        text-align: center;\r\n                        font-size: 18px;\r\n                        color: black;\r\n                        font-weight: 300;\r\n                    `}\r\n                        name=\"confirmpassword\"\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={data.confirmpassword}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button type=\"submit\" className={css`\r\n                        appearance: none;\r\n                        outline: 0;\r\n                        background-color: white;\r\n                        border: 0;\r\n                        padding: 10px 15px;\r\n                        color: black;\r\n                        border-radius: 3px;\r\n                        width: 250px;\r\n                        font-size: 18px;\r\n                    `}>Create Account</button>\r\n                </form>\r\n\r\n                <div className={css`\r\n                    a{\r\n                        padding:1%;\r\n                        margin:20px;\r\n                    }\r\n                `}>\r\n                    <Link to=\"/PiFarm\" className=\"btn btn-dark\">Go to Home Page</Link>\r\n                    <Link to=\"/Login\" className=\"btn btn-dark\">Go to Login Page</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React,{useContext} from 'react';\r\nimport {AuthContext} from \"../../config/Auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n      <>\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/Login\"} />\r\n        )\r\n      }\r\n    />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"../../Home\";\r\nimport Dashboard from \"../../Dashboard\";\r\nimport Header from \"./Header\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport LoginPage from \"./Login\";\r\nimport LogoutPage from \"./Logout\";\r\nimport RegisterPage from \"./Register\";\r\nimport {AuthProvider} from \"../../config/Auth\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n      <AuthProvider>\r\n        <BrowserRouter basename=\"/\">\r\n          <Header/>\r\n          <main>\r\n              <Switch>\r\n                  <Route path=\"/PiFarm\"  component={Home}/>\r\n                  <PrivateRoute exact path=\"/Dashboard\" component={Dashboard}/>\r\n                  <Route path=\"/Login\" component={LoginPage}/>\r\n                  <Route path=\"/Logout\" component={LogoutPage}/>\r\n                  <Route path=\"/Register\" component={RegisterPage}/>\r\n                  <Route component={NotFoundPage}/>\r\n              </Switch>\r\n          </main>\r\n        </BrowserRouter>\r\n      </AuthProvider>\r\n      \r\n    );\r\n}\r\n","import React from 'react'\r\nimport {FaFacebookF,FaGithub,FaInstagram,FaTwitter,FaRegCopyright} from \"react-icons/fa\";\r\nimport {MdEmail} from \"react-icons/md\";\r\nexport default function Footer() {\r\n\r\n    return(\r\n        <footer id=\"footer\" className=\"dark-section\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"social-icon\" href=\"https://www.facebook.com/\"><FaFacebookF/></a>\r\n                <a className=\"social-icon\" href=\"https://www.instagram.com/\"><FaInstagram/></a>\r\n                <a className=\"social-icon\" href=\"https://twitter.com/explore\"><FaTwitter/></a>\r\n                <a className=\"social-icon\" href=\"https://github.com/Zaneeyboy/PiFarm\"><FaGithub/></a>\r\n                <a className=\"social-icon\" href=\"https://gmail.com\"><MdEmail/></a>\r\n                <p className=\"footer-copyright\"><FaRegCopyright/> 2020 Big Twig Farms</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\nimport AppRouter from \"./AppRouter\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function Layout(props) {\r\n    return ( \r\n        <div>\r\n            <AppRouter/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport Layout from \"./components/layout/Layout\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/App.css\";\n\n\nfunction App() {\n  return (<>\n    <Layout/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Pifarm.ab85bf5e.png\";","module.exports = __webpack_public_path__ + \"static/media/phScale.8b312962.png\";","module.exports = __webpack_public_path__ + \"static/media/Turbidity.c7955fe3.png\";","module.exports = __webpack_public_path__ + \"static/media/Soil Moisture.88b7af05.png\";"],"sourceRoot":""}